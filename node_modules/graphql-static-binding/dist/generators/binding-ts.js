"use strict";
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var graphcool_ts_1 = require("./graphcool-ts");
exports.generator = __assign({}, graphcool_ts_1.generator, { Main: renderMainMethod, Header: renderHeader });
function renderHeader(schema) {
    return "import { Binding as BaseBinding, BindingOptions } from 'graphql-binding'\nimport { GraphQLResolveInfo } from 'graphql'";
}
function renderMainMethod(queryType, mutationType, subscriptionType) {
    return "export class Binding extends BaseBinding {\n  \n  constructor({ schema, fragmentReplacements }: BindingOptions) {\n    super({ schema, fragmentReplacements });\n  }\n  \n  query: Query = {\n" + graphcool_ts_1.renderMainMethodFields('query', queryType.getFields()) + "\n  }" + (mutationType ? "\n\n  mutation: Mutation = {\n" + graphcool_ts_1.renderMainMethodFields('mutation', mutationType.getFields()) + "\n  }" : '') + (subscriptionType ? "\n\n  subscription: Subscription = {\n" + graphcool_ts_1.renderMainSubscriptionMethodFields(subscriptionType.getFields()) + "\n  }" : '') + "\n}";
}
//# sourceMappingURL=binding-ts.js.map